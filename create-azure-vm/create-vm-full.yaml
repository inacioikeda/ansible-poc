---
- name: Criar uma VM Ubuntu no Azure com IP fixo e configurar Apache
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Verificar se o grupo de recursos existe
      azure_rm_resourcegroup_info:
        name: myResourceGroup
      register: resource_group_check
      ignore_errors: yes

    - name: Criar um grupo de recursos se não existir
      azure_rm_resourcegroup:
        name: myResourceGroup
        location: East US
        state: present
      when: resource_group_check|bool == false

    - name: Verificar se a rede virtual existe
      azure_rm_virtualnetwork_info:
        resource_group: myResourceGroup
        name: myVnet
      register: vnet_check
      ignore_errors: yes

    - name: Criar uma rede virtual se não existir
      azure_rm_virtualnetwork:
        name: myVnet
        resource_group: myResourceGroup
        location: East US
        address_prefixes:
          - 192.168.1.0/24
        state: present
      when: vnet_check|bool == false

    - name: Verificar se a sub-rede existe
      azure_rm_subnet_info:
        resource_group: myResourceGroup
        virtual_network_name: myVnet
        name: mySubnet
      register: subnet_check
      ignore_errors: yes

    - name: Criar uma sub-rede se não existir
      azure_rm_subnet:
        name: mySubnet
        resource_group: myResourceGroup
        virtual_network_name: myVnet
        address_prefix: 192.168.1.0/24
        state: present
      when: subnet_check|bool == false

    - name: Verificar se o IP público existe
      azure_rm_publicipaddress_info:
        resource_group: myResourceGroup
        name: myPublicIP
      register: public_ip_check
      ignore_errors: yes

    - name: Criar um IP público se não existir
      azure_rm_publicipaddress:
        name: myPublicIP
        resource_group: myResourceGroup
        location: East US
        allocation_method: Static
        state: present
      when: public_ip_check|bool == false

    - name: Verificar se a interface de rede existe
      azure_rm_networkinterface_info:
        resource_group: myResourceGroup
        name: myNIC
      register: nic_check
      ignore_errors: yes

    - name: Criar uma interface de rede com IP fixo se não existir
      azure_rm_networkinterface:
        name: myNIC
        subnet_name: mySubnet
        virtual_network: myVnet  
        resource_group: myResourceGroup
        location: East US
        dns_servers:
          - 8.8.8.8
        ip_configurations:
          - name: myIPConfig
            public_ip_address_name: myPublicIP
            private_ip_address: 192.168.1.100
            private_ip_allocation_method: Static
        state: present
      when: nic_check|bool == false

    - name: Verificar se a VM existe
      azure_rm_virtualmachine_info:
        resource_group: myResourceGroup
        name: myUbuntuVM
      register: vm_check
      ignore_errors: yes

    - name: Criar uma máquina virtual Ubuntu se não existir
      azure_rm_virtualmachine:
        name: myUbuntuVM
        resource_group: myResourceGroup
        location: East US
        vm_size: Standard_DS1_v2
        admin_username: azureuser
        admin_password: MyP@ssw0rd1234
        network_interfaces:
          - myNIC
        image:
          offer: 0001-com-ubuntu-server-jammy
          publisher: Canonical
          sku: 22_04-lts
          version: latest
        state: present
      when: vm_check|bool == false

    - name: Criar regra de segurança para permitir SSH, HTTP e HTTPS
      azure_rm_securitygroup:
        name: myNetworkSecurityGroup
        resource_group: myResourceGroup
        location: East US
        rules:
          - name: AllowSSH
            protocol: Tcp
            direction: Inbound
            priority: 1000
            access: Allow
            destination_port_range: 22
            source_address_prefix: '*'
          - name: AllowHTTP
            protocol: Tcp
            direction: Inbound
            priority: 1001
            access: Allow
            destination_port_range: 80
            source_address_prefix: '*'
          - name: AllowHTTPS
            protocol: Tcp
            direction: Inbound
            priority: 1002
            access: Allow
            destination_port_range: 443
            source_address_prefix: '*'
        state: present
      register: nsg

    - name: Associar a interface de rede ao grupo de segurança
      azure_rm_networkinterface:
        name: myNIC
        resource_group: myResourceGroup
        location: East US
        security_group: myNetworkSecurityGroup
        subnet_name: mySubnet
        virtual_network: myVnet
        state: present
      when: nsg.changed

#    - name: Exibir IP Público
#      debug:
#        msg: "A VM foi criada e o IP Público é {{ public_ip_check.public_ip_addresses[0].ip_address if public_ip_check.public_ip_addresses else 'Não disponível' }}"
#      when: public_ip_check is defined and public_ip_check.public_ip_addresses
#
#- name: Configurar e instalar Apache na VM Ubuntu
#  hosts: localhost
#  gather_facts: no
#  tasks:
#    - name: Aguardar a VM estar acessível
#      wait_for:
#        host: "{{ public_ip_check.public_ip_address.ip_address }}"
#        port: 22
#        delay: 60
#        timeout: 300
#
#    - name: Configurar o acesso SSH à VM
#      ansible.builtin.set_fact:
#        ansible_host: "{{ hostvars['localhost']['public_ip_check']['public_ip_addresses_name'][0]['ip_address'] }}"
#        ansible_user: azureuser
#        ansible_password: MyP@ssw0rd1234
#
#    - name: Instalar Apache na VM Ubuntu
#      ansible.builtin.yum:
#        name: apache2
#        state: present
#      become: yes
#
#    - name: Iniciar e habilitar o serviço Apache
#      ansible.builtin.systemd:
#        name: apache2
#        state: started
#        enabled: yes
#      become: yes
#
#    - name: Configurar permissões do Apache
#      ansible.builtin.file:
#        path: /var/www/html/index.html
#        state: touch
#        mode: '0644'
#      become: yes
#
#    - name: Criar uma página de teste no Apache
#      ansible.builtin.copy:
#        content: |
#          <html>
#          <head><title>Apache Server</title></head>
#          <body><h1>Apache está funcionando!</h1></body>
#          </html>
#        dest: /var/www/html/index.html
#        mode: '0644'
#      become: yes
#